# Dockerfile for Backend Only
# This is a simplified backend-only build for Render deployment

FROM node:20-slim AS base

WORKDIR /app

# Copy root package files
COPY package.json bun.lock* ./
COPY tsconfig.base.json tsconfig.json nx.json ./

# Copy backend source
COPY apps/backend ./apps/backend
COPY packages/shared-types ./packages/shared-types

# Remove workspace dependency from package.json before npm install
RUN apt-get update && apt-get install -y jq && rm -rf /var/lib/apt/lists/* && \
    jq 'del(.dependencies["@cursorrulecraft/shared-types"])' apps/backend/package.json > apps/backend/package.json.tmp && \
    mv apps/backend/package.json.tmp apps/backend/package.json

# Install dependencies
RUN npm install

# Build backend
WORKDIR /app/apps/backend
RUN npm run build

# Production stage
FROM node:20-slim AS production

WORKDIR /app

ENV NODE_ENV=production

# Copy built output
COPY --from=base /app/apps/backend/dist ./dist

# Copy shared-types for module-alias resolution
COPY --from=base /app/packages/shared-types ./packages/shared-types

# Copy package.json and install production dependencies
COPY --from=base /app/apps/backend/package.json ./package.json

# Update package.json: remove workspace dependency and fix module-alias paths for production
RUN apt-get update && apt-get install -y jq && rm -rf /var/lib/apt/lists/* && \
    jq 'del(.dependencies["@cursorrulecraft/shared-types"]) | ._moduleAliases["@"] = "dist/apps/backend/src"' package.json > package.json.tmp && \
    mv package.json.tmp package.json && \
    npm install --omit=dev

# Expose backend port
EXPOSE 4000

# Health check on backend API
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:4000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start backend
CMD ["node", "dist/apps/backend/src/main.js"]

